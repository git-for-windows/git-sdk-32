<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="gio-win32-2.0"/>
  <c:include name="gio/gio.h"/>
  <c:include name="gio/gregistrysettingsbackend.h"/>
  <c:include name="gio/gwin32inputstream.h"/>
  <c:include name="gio/gwin32outputstream.h"/>
  <namespace name="GioWin32"
             version="2.0"
             shared-library="libgio-2.0-0.dll"
             c:identifier-prefixes="GWin32,G"
             c:symbol-prefixes="gio,g_win32,g">
    <function-macro name="INPUT_STREAM"
                    c:identifier="G_WIN32_INPUT_STREAM"
                    introspectable="0">
      <source-position filename="gio/gwin32inputstream.h" line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_STREAM_CLASS"
                    c:identifier="G_WIN32_INPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32inputstream.h" line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_STREAM_GET_CLASS"
                    c:identifier="G_WIN32_INPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32inputstream.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_INPUT_STREAM"
                    c:identifier="G_IS_WIN32_INPUT_STREAM"
                    introspectable="0">
      <source-position filename="gio/gwin32inputstream.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_INPUT_STREAM_CLASS"
                    c:identifier="G_IS_WIN32_INPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32inputstream.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_NETWORK_MONITOR"
                    c:identifier="G_IS_WIN32_NETWORK_MONITOR"
                    introspectable="0">
      <source-position filename="gio/gwin32networkmonitor.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_NETWORK_MONITOR_CLASS"
                    c:identifier="G_IS_WIN32_NETWORK_MONITOR_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32networkmonitor.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_OUTPUT_STREAM"
                    c:identifier="G_IS_WIN32_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="gio/gwin32outputstream.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_WIN32_OUTPUT_STREAM_CLASS"
                    c:identifier="G_IS_WIN32_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32outputstream.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <class name="InputStream"
           c:symbol-prefix="input_stream"
           c:type="GWin32InputStream"
           parent="Gio.InputStream"
           glib:type-name="GWin32InputStream"
           glib:get-type="g_win32_input_stream_get_type"
           glib:type-struct="InputStreamClass">
      <doc xml:space="preserve"
           filename="gio/gwin32inputstream.c"
           line="38">`GWin32InputStream` implements [class@Gio.InputStream] for reading from a
Windows file handle.

Note that `&lt;gio/gwin32inputstream.h&gt;` belongs to the Windows-specific GIO
interfaces, thus you have to use the `gio-windows-2.0.pc` pkg-config file
when using it.</doc>
      <source-position filename="gio/gwin32inputstream.h" line="63"/>
      <constructor name="new" c:identifier="g_win32_input_stream_new">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="293">Creates a new #GWin32InputStream for the given @handle.

If @close_handle is %TRUE, the handle will be closed
when the stream is closed.

Note that "handle" here means a Win32 HANDLE, not a "file descriptor"
as used in the Windows C libraries.</doc>
        <source-position filename="gio/gwin32inputstream.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gio/gwin32inputstream.c"
               line="306">a new #GWin32InputStream</doc>
          <type name="Gio.InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="295">a Win32 file handle</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="close_handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="296">%TRUE to close the handle when done</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_close_handle"
                c:identifier="g_win32_input_stream_get_close_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="348">Returns whether the handle of @stream will be
closed when the stream is closed.</doc>
        <source-position filename="gio/gwin32inputstream.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gio/gwin32inputstream.c"
               line="355">%TRUE if the handle is closed when done</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="350">a #GWin32InputStream</doc>
            <type name="Gio.Win32InputStream" c:type="GWin32InputStream*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_handle"
                c:identifier="g_win32_input_stream_get_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="367">Return the Windows file handle that the stream reads from.</doc>
        <source-position filename="gio/gwin32inputstream.h" line="77"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gio/gwin32inputstream.c"
               line="373">The file handle of @stream</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="369">a #GWin32InputStream</doc>
            <type name="Gio.Win32InputStream" c:type="GWin32InputStream*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_close_handle"
                c:identifier="g_win32_input_stream_set_close_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="324">Sets whether the handle of @stream shall be closed
when the stream is closed.</doc>
        <source-position filename="gio/gwin32inputstream.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="326">a #GWin32InputStream</doc>
            <type name="Gio.Win32InputStream" c:type="GWin32InputStream*"/>
          </parameter>
          <parameter name="close_handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32inputstream.c"
                 line="327">%TRUE to close the handle when done</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <property name="close-handle"
                version="2.26"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="267">Whether to close the file handle when the stream is closed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="handle"
                version="2.26"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gio/gwin32inputstream.c"
             line="253">The handle that the stream reads from.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="Gio.InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="Gio.Win32InputStreamPrivate"
              c:type="GWin32InputStreamPrivate*"/>
      </field>
    </class>
    <record name="InputStreamClass"
            c:type="GWin32InputStreamClass"
            glib:is-gtype-struct-for="InputStream">
      <source-position filename="gio/gwin32inputstream.h" line="63"/>
      <field name="parent_class">
        <type name="Gio.InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gio/gwin32inputstream.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gio/gwin32inputstream.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gio/gwin32inputstream.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gio/gwin32inputstream.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gio/gwin32inputstream.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="InputStreamPrivate"
            c:type="GWin32InputStreamPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gio/gwin32inputstream.h" line="40"/>
    </record>
    <function-macro name="NETWORK_MONITOR"
                    c:identifier="G_WIN32_NETWORK_MONITOR"
                    introspectable="0">
      <source-position filename="gio/gwin32networkmonitor.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_MONITOR_CLASS"
                    c:identifier="G_WIN32_NETWORK_MONITOR_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32networkmonitor.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_MONITOR_GET_CLASS"
                    c:identifier="G_WIN32_NETWORK_MONITOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32networkmonitor.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <record name="NetworkMonitor" c:type="GWin32NetworkMonitor">
      <source-position filename="gio/gwin32networkmonitor.h" line="45"/>
      <field name="parent_instance" introspectable="0" writable="1">
        <type c:type="GNetworkMonitorBase"/>
      </field>
      <field name="priv" writable="1">
        <type name="Gio.Win32NetworkMonitorPrivate"
              c:type="GWin32NetworkMonitorPrivate*"/>
      </field>
    </record>
    <record name="NetworkMonitorClass" c:type="GWin32NetworkMonitorClass">
      <source-position filename="gio/gwin32networkmonitor.h" line="49"/>
      <field name="parent_class" introspectable="0" writable="1">
        <type c:type="GNetworkMonitorBaseClass"/>
      </field>
    </record>
    <record name="NetworkMonitorPrivate"
            c:type="GWin32NetworkMonitorPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gio/gwin32networkmonitor.h" line="39"/>
    </record>
    <function-macro name="OUTPUT_STREAM"
                    c:identifier="G_WIN32_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="gio/gwin32outputstream.h" line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OUTPUT_STREAM_CLASS"
                    c:identifier="G_WIN32_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32outputstream.h" line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OUTPUT_STREAM_GET_CLASS"
                    c:identifier="G_WIN32_OUTPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gio/gwin32outputstream.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="OutputStream"
           c:symbol-prefix="output_stream"
           c:type="GWin32OutputStream"
           parent="Gio.OutputStream"
           glib:type-name="GWin32OutputStream"
           glib:get-type="g_win32_output_stream_get_type"
           glib:type-struct="OutputStreamClass">
      <doc xml:space="preserve"
           filename="gio/gwin32outputstream.c"
           line="39">`GWin32OutputStream` implements [class@Gio.OutputStream] for writing to a
Windows file handle.

Note that `&lt;gio/gwin32outputstream.h&gt;` belongs to the Windows-specific GIO
interfaces, thus you have to use the `gio-windows-2.0.pc` pkg-config file
when using it.</doc>
      <source-position filename="gio/gwin32outputstream.h" line="63"/>
      <constructor name="new"
                   c:identifier="g_win32_output_stream_new"
                   version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="280">Creates a new #GWin32OutputStream for the given @handle.

If @close_handle, is %TRUE, the handle will be closed when the
output stream is destroyed.</doc>
        <source-position filename="gio/gwin32outputstream.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gio/gwin32outputstream.c"
               line="290">a new #GOutputStream</doc>
          <type name="Gio.OutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="282">a Win32 file handle</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="close_handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="283">%TRUE to close the handle when done</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_close_handle"
                c:identifier="g_win32_output_stream_get_close_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="334">Returns whether the handle of @stream will be closed when the
stream is closed.</doc>
        <source-position filename="gio/gwin32outputstream.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gio/gwin32outputstream.c"
               line="341">%TRUE if the handle is closed when done</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="336">a #GWin32OutputStream</doc>
            <type name="Gio.Win32OutputStream" c:type="GWin32OutputStream*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_handle"
                c:identifier="g_win32_output_stream_get_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="353">Return the Windows handle that the stream writes to.</doc>
        <source-position filename="gio/gwin32outputstream.h" line="77"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gio/gwin32outputstream.c"
               line="359">The handle descriptor of @stream</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="355">a #GWin32OutputStream</doc>
            <type name="Gio.Win32OutputStream" c:type="GWin32OutputStream*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_close_handle"
                c:identifier="g_win32_output_stream_set_close_handle"
                version="2.26">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="310">Sets whether the handle of @stream shall be closed when the stream
is closed.</doc>
        <source-position filename="gio/gwin32outputstream.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="312">a #GWin32OutputStream</doc>
            <type name="Gio.Win32OutputStream" c:type="GWin32OutputStream*"/>
          </parameter>
          <parameter name="close_handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gio/gwin32outputstream.c"
                 line="313">%TRUE to close the handle when done</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <property name="close-handle"
                version="2.26"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="254">Whether to close the file handle when the stream is closed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="handle"
                version="2.26"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gio/gwin32outputstream.c"
             line="240">The file handle that the stream writes to.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="Gio.OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="Gio.Win32OutputStreamPrivate"
              c:type="GWin32OutputStreamPrivate*"/>
      </field>
    </class>
    <record name="OutputStreamClass"
            c:type="GWin32OutputStreamClass"
            glib:is-gtype-struct-for="OutputStream">
      <source-position filename="gio/gwin32outputstream.h" line="63"/>
      <field name="parent_class">
        <type name="Gio.OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gio/gwin32outputstream.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gio/gwin32outputstream.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gio/gwin32outputstream.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gio/gwin32outputstream.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gio/gwin32outputstream.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OutputStreamPrivate"
            c:type="GWin32OutputStreamPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gio/gwin32outputstream.h" line="40"/>
    </record>
    <function name="registry_settings_backend_new"
              c:identifier="g_registry_settings_backend_new"
              version="2.78">
      <doc xml:space="preserve"
           filename="gio/gregistrysettingsbackend.c"
           line="2346">If @registry_key is %NULL then the default path
`HKEY_CURRENT_USER\Software\GSettings` is used.</doc>
      <source-position filename="gio/gregistrysettingsbackend.h" line="30"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gio/gregistrysettingsbackend.c"
             line="2354">a registry-backed #GSettingsBackend</doc>
        <type name="Gio.SettingsBackend" c:type="GSettingsBackend*"/>
      </return-value>
      <parameters>
        <parameter name="registry_key"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gio/gregistrysettingsbackend.c"
               line="2348">the path to the registry key where
               settings are stored, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
